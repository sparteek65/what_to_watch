{"version":3,"sources":["static/logo.png","api/api.jsx","components/movie/card.jsx","screens/homescreen.jsx","components/torrent/card.jsx","screens/detailPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","api","create","baseURL","Card","mode","props","ott_id","tmdb_id","query","react_default","a","createElement","dist","to","className","style","borderRadius","onClick","Data","title","description","vote_average","release_date","image","backdrop","imdb_id","setcurrentOtt","handle_cache","src","HomeScreen","_ref","currentOtt","_useState","useState","_useState2","Object","slicedToArray","recommendation_data","setrecommendation_data","URLSearchParams","useLocation","search","useEffect","pid","get","url","console","log","then","response","data","display","columnGap","flexWrap","margin","justifyContent","rowGap","map","card_Card","poster_path","overview","backdrop_path","TorrentCard","color","width","backgroundColor","wordWrap","padding","boxShadow","fontSize","fontWeight","type","seeds","size","href","DetailPage","torrents","settorrents","height","position","top","left","flexDirection","card_TorrentCard","size_bytes","App","CurrentOtt","setCurrentOtt","minHeight","maxHeight","placeholder","react_router_dist","path","element","homescreen_HomeScreen","detailPage_DetailPage","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.446ea879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.89a85d4f.png\";","import { create } from \"apisauce\";\n\n// define the api\nexport const api = create({\n  baseURL: \"https://efb5-38-79-4-4.ngrok.io\",\n});\n\nexport const yify_api = create({\n  baseURL: \"https://yts.torrentbay.to/api/v2/movie_details.json\",\n  mode: \"no-cors\",\n});\n","import React from \"react\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const Card = (props) => {\n  let ott_id = props.tmdb_id;\n\n  if (ott_id === null) {\n    ott_id = \"\";\n  }\n\n  let query = \"/what_to_watch/detail?ott_id=\" + ott_id;\n\n  const handle_cache = () => {\n    const Data = {\n      title: props.title,\n      description: props.description,\n      vote_average: props.vote_average,\n      release_date: props.release_date,\n      image: props.image,\n      backdrop: props.backdrop,\n      imdb_id: props.imdb_id,\n    };\n    props.setcurrentOtt(Data);\n  };\n\n  return (\n    <Link to={query}>\n      <div\n        className=\"card\"\n        style={{ borderRadius: \"10px\" }}\n        onClick={() => {\n          handle_cache();\n        }}\n      >\n        <img\n          src={\"https://image.tmdb.org/t/p/w200/\" + props.image}\n          style={{ borderRadius: \"10px\" }}\n        ></img>\n      </div>\n    </Link>\n  );\n};\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { api } from \"../api/api\";\nimport { Card } from \"../components/movie/card.jsx\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const HomeScreen = ({ currentOtt, setcurrentOtt }) => {\n  const [recommendation_data, setrecommendation_data] = useState([{}]);\n  const useQuery = () => new URLSearchParams(useLocation().search);\n  let query = useQuery();\n\n  useEffect(() => {\n    let pid = query.get(\"profile_id\");\n    if (pid === null) {\n      pid = \"36f267ebb6454b53bac77eaf8f087751\";\n    }\n    let url = \"/recommendation/recommend/?user_id=\" + pid;\n    console.log(pid);\n    api\n      .get(url)\n      .then((response) => response.data)\n      .then(setrecommendation_data);\n    return () => {};\n  }, []);\n  return (\n    <div\n      className=\"recommendation_row\"\n      style={{\n        display: \"flex\",\n        columnGap: \"10px\",\n        flexWrap: \"wrap\",\n        margin: \"20px\",\n        justifyContent: \"space-evenly\",\n        rowGap: \"10px\",\n      }}\n    >\n      {recommendation_data.map((data) => {\n        return (\n          <Card\n            currentOtt={currentOtt}\n            setcurrentOtt={setcurrentOtt}\n            image={data.poster_path}\n            tmdb_id={data.tmdb_id}\n            imdb_id={data.imdb_id}\n            title={data.title}\n            release_date={data.release_date}\n            description={data.overview}\n            vote_average={data.vote_average}\n            backdrop={data.backdrop_path}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const TorrentCard = (props) => {\n  return (\n    <div\n      className=\"torrent-card\"\n      style={{\n        color: \"black\",\n        width: \"120px\",\n        backgroundColor: \"white\",\n        borderRadius: \"10px\",\n        wordWrap: \"break-word\",\n        padding: \"10px\",\n        boxShadow: \"-1px 3px 19px 2px rgba(0,0,0,0.71)\",\n      }}\n    >\n      <div\n        className=\"torrent-type\"\n        style={{ fontSize: \"20px\", fontWeight: 700 }}\n      >\n        {props.type}\n      </div>\n      <hr></hr>\n      <div className=\"torrent-seeds\">\n        Seeds <b>{props.seeds}</b>{\" \"}\n      </div>\n      <hr></hr>\n\n      <div className=\"torrent-size\">Size {props.size}</div>\n      <hr></hr>\n\n      <div className=\"torrent-url\">\n        Download <a href={props.url}>Yify</a>\n      </div>\n      <hr></hr>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { api } from \"../api/api\";\nimport { TorrentCard } from \"../components/torrent/card\";\nimport \"./master.css\";\n\nexport const DetailPage = ({ currentOtt, setcurrentOtt }) => {\n  const useQuery = () => new URLSearchParams(useLocation().search);\n  const [torrents, settorrents] = useState([]);\n\n  let query = useQuery();\n  let pid = query.get(\"ott_id\");\n\n  useEffect(() => {\n    // console.log(pid);\n    let url = \"/recommendation/torrent/?imdb_id=\" + currentOtt.imdb_id;\n    api\n      .get(url)\n      .then((response) => response.data)\n      .then((data) => {\n        if (data) {\n          settorrents(data);\n        }\n      });\n    return () => {};\n  }, []);\n\n  return (\n    <div>\n      <img\n        src={\"https://image.tmdb.org/t/p/original/\" + currentOtt.backdrop}\n        style={{ height: \"650px\", width: \"100%\" }}\n      ></img>\n      <div\n        style={{\n          height: \"652px\",\n          width: \"100%\",\n          backgroundColor: \"#00000096\",\n          position: \"relative\",\n          top: \"-653px\",\n        }}\n      ></div>\n      <div className=\"\" style={{}}>\n        <img\n          src={\"https://image.tmdb.org/t/p/w500/\" + currentOtt.image}\n          style={{\n            borderRadius: \"10px\",\n            height: \"300px\",\n            position: \"absolute\",\n            top: \"365px\",\n            left: \"85px\",\n          }}\n        ></img>\n        <p className=\"ott_details title\">{currentOtt.title}</p>\n        <p className=\"ott_details vote\"> {currentOtt.vote_average}</p>\n        <p className=\"ott_details release\">{currentOtt.release_date}</p>\n        <p className=\"ott_details description\">{currentOtt.description}</p>\n      </div>\n      <div\n        className=\"torrent-cards\"\n        style={{\n          position: \"absolute\",\n          top: \"670px\",\n          left: \"315px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          columnGap: \"15px\",\n        }}\n      >\n        {torrents.map((data) => {\n          return (\n            <TorrentCard\n              size={data.size}\n              size_bytes={data.size_bytes}\n              type={data.type}\n              url={data.url}\n              seeds={data.seeds}\n            ></TorrentCard>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import logo from \"./static/logo.png\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport { HomeScreen } from \"./screens/homescreen\";\nimport { DetailPage } from \"./screens/detailPage\";\n\nfunction App() {\n  const [CurrentOtt, setCurrentOtt] = useState({});\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <header\n          className=\"App-header\"\n          style={{\n            minHeight: \"50px\",\n            maxHeight: \"60px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <div className=\"header-items\">\n            <p>WtW</p>\n            <div className=\"search-container\">\n              <input\n                className=\"search-box\"\n                type=\"text\"\n                placeholder=\"Search ...\"\n              ></input>\n              <button className=\"search-btn\">Search</button>\n            </div>\n            <button className=\"login-btn\">Learn More</button>\n          </div>\n        </header>\n        <Routes>\n          <Route\n            path=\"/what_to_watch/\"\n            element={\n              <HomeScreen\n                currentOtt={CurrentOtt}\n                setcurrentOtt={setCurrentOtt}\n              />\n            }\n          />\n          <Route\n            path=\"/what_to_watch/detail/\"\n            element={\n              <DetailPage\n                currentOtt={CurrentOtt}\n                setcurrentOtt={setCurrentOtt}\n              />\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}